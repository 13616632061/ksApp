if (rootProject.ext.isShoperPlatformAplication){
    apply plugin: 'com.android.application'
}else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        if (rootProject.ext.isShoperPlatformAplication){
            applicationId "com.example.component_shoper_platform"
        }
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
        //路由需配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
//
        ndk {
//            abiFilters 'armeabi-v7a', 'x86'//为了启动模拟器快  暂时放开  等打包再关掉
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            // 独立调试与集成调试时使用不同的 AndroidManifest.xml 文件
            if (rootProject.ext.isShoperPlatformAplication) {
                manifest.srcFile 'src/main/moduleManifest/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "28.0.0" //这里是版本号 例如：28.0.0
                }
            }
        }
    }



}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["constraint-layout"]
    api rootProject.ext.dependencies["recyclerview"]
//    implementation project(':Baselibrary')
    api rootProject.ext.dependencies["arouter"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

}
repositories {
    mavenCentral()
}
